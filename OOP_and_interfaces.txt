public class CarInsurancePolicy {

    private int policyNumber;
    private int numPayments;
    private String residentCity;

    public CarInsurancePolicy(int num, int payments, String city) {
        policyNumber = num;
        numPayments = payments;
        residentCity = city;
    }

    public CarInsurancePolicy(int num, int payments) {
        policyNumber = num;
        numPayments = payments;
        residentCity = "Mayfield";
    }

    public CarInsurancePolicy(int num) {
        policyNumber = num;
        numPayments = 2;
        residentCity = "Mayfield";
    }

    public void display() {
        System.out.println("Policy #" + policyNumber + ". " + numPayments + " payments annually. Driver resides in " + residentCity + ".") ;
    }

}


/----------- with static fabric methods -------------/



public class CarPolicyFixed {

    private int policyNumber;
    private int numPayments;
    private String residentCity;

    private CarPolicyFixed(int num, int payments, String city) {
        policyNumber = num;
        numPayments = payments;
        residentCity = city;
    }

    private CarPolicyFixed(int num, int payments) {
        policyNumber = num;
        numPayments = payments;
        residentCity = "Mayfield";
    }

    private CarPolicyFixed(int num) {
        policyNumber = num;
        numPayments = 2;
        residentCity = "Mayfield";
    }

    public CarPolicyFixed() {
        policyNumber = 1000000001;
        numPayments = 2;
        residentCity = "Mayfield";
    }

    public static CarPolicyFixed policyNumberArg(int num) {
        return new CarPolicyFixed(num);
    }

    public static CarPolicyFixed numAmdPaymentsArg(int num, int payments) {
            return new CarPolicyFixed(num, payments);
    }

    public static CarPolicyFixed paymentsAndCityArgs(int num, int payments, String city) {
        return new CarPolicyFixed(num, payments, city);
    }



    public void display() {
        System.out.println("Policy #" + policyNumber + ". " + numPayments + " payments annually. Driver resides in " + residentCity + ".") ;
    }

}











